<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="Sayali" failures="0" tests="4" name="Default test" time="2.089" errors="0" timestamp="2024-06-09T13:50:19 IST">
  <testcase classname="project.qa.swaglabs.tests.BaseTest" name="@BeforeMethod setup" time="1.966">
    <failure type="org.openqa.selenium.InvalidSelectorException" message="Compound class names not permitted
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: &amp;apos;4.18.1&amp;apos;, revision: &amp;apos;b1d3319b48&amp;apos;
System info: os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;20.0.2&amp;apos;
Driver info: driver.version: unknown">
      <![CDATA[org.openqa.selenium.InvalidSelectorException: Compound class names not permitted
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '20.0.2'
Driver info: driver.version: unknown
at org.openqa.selenium.By$ByClassName.<init>(By.java:309)
at org.openqa.selenium.By.className(By.java:100)
at project.qa.swaglabs.page.LoginPage.<init>(LoginPage.java:22)
at project.qa.swaglabs.tests.BaseTest.setup(BaseTest.java:25)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:390)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:325)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:810)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:577)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="project.qa.swaglabs.tests.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="project.qa.swaglabs.tests.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="project.qa.swaglabs.tests.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="project.qa.swaglabs.tests.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="project.qa.swaglabs.tests.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="project.qa.swaglabs.tests.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="project.qa.swaglabs.tests.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="project.qa.swaglabs.tests.LoginTest" name="invalidUsernamePasswordErrorTest" time="0.0">
    <skipped/>
  </testcase> <!-- invalidUsernamePasswordErrorTest -->
  <testcase classname="project.qa.swaglabs.tests.LoginTest" name="loginTest" time="0.0">
    <skipped/>
  </testcase> <!-- loginTest -->
  <testcase classname="project.qa.swaglabs.tests.LoginTest" name="missingPasswordErrorTest" time="0.0">
    <skipped/>
  </testcase> <!-- missingPasswordErrorTest -->
  <testcase classname="project.qa.swaglabs.tests.LoginTest" name="missingUsernameErrorTest" time="0.0">
    <skipped/>
  </testcase> <!-- missingUsernameErrorTest -->
</testsuite> <!-- Default test -->
